
#Область ОписаниеПечатнойФормы   

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	
	Назначение = Новый Массив;
	Назначение.Добавить("Документ.ВедомостьНаВыплатуЗарплатыВБанк");
	Назначение.Добавить("Документ.ВедомостьНаВыплатуЗарплатыВКассу");
	Назначение.Добавить("Документ.ВедомостьНаВыплатуЗарплатыПеречислением");
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение", Назначение);
	ПараметрыРегистрации.Вставить("Наименование", НСтр("ru = '(дм) Список Перечисляемой Зарплаты'"));
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", НСтр("ru = 'Список Перечисляемой Зарплаты'"));
 	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();

	ДобавитьКоманду(ТаблицаКоманд,
	НСтр("ru = 'Список Перечисляемой Зарплаты'"),
	"ДС3_СписокПеречисляемойЗарплаты",
	 "ВызовСерверногоМетода", 
	 Истина,
	 "ПечатьMXL");       
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	ТипСтрока = Новый ОписаниеТипов("Строка");
	Команды.Колонки.Добавить("Представление", ТипСтрока);
	Команды.Колонки.Добавить("Идентификатор", ТипСтрока);
	Команды.Колонки.Добавить("Использование", ТипСтрока);
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор,
	Использование = "ВызовСерверногоМетода", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

#КонецОбласти   

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ДополнитьКомплектВнешнимиПечатнымиФормами", Ложь);
	//ПараметрыПечати.Вставить("РеквизитыДетализации", "Сотрудник");
	ПараметрыПечати.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДС3_СписокПеречисляемойЗарплаты") Тогда
		ТабДок = ПечатьСписокПеречисляемойЗарплаты(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ДС3_СписокПеречисляемойЗарплаты",
		НСтр("ru='Форма ДС3'"), ТабДок);	
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьСписокПеречисляемойЗарплаты(МассивОбъектов, ОбъектыПечати)
	
	ПутьКМакету = "ДС3_СписокПеречисляемойЗарплаты";
	
	Менеджер = Документы[МассивОбъектов[0].Метаданные().Имя];
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб          = Истина;
	ТабличныйДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДС3_СписокПеречисляемойЗарплаты";
	
	Макет = ПолучитьМакет("ДС3_СписокПеречисляемойЗарплаты");//УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету);
	НастройкиПечатныхФорм = ЗарплатаКадры.НастройкиПечатныхФорм();
	
	ВалютаУчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();
	
	// получаем данные для печати
	ВыборкаШапок = Менеджер.ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = ВыборкаДляПечатиТаблицы(МассивОбъектов);
	
	// Структура параметров областей стандартного макета для помещения данных печати
	ДанныеПечати = ПараметрыОбластейСтандартногоМакета(Макет);
			
	ПервыйДокумент = Истина;
	Пока ВыборкаШапок.Следующий() Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();
		
		ОбластьМакетаШапкаДокумента  = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапкаТаблицы    = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрокаТаблицы   = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице  = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвалДокумента = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакетаПодписиОтветственного = Макет.ПолучитьОбласть("ПодписиОтветственного");
		ОбластьМакетаПодвалДата = Макет.ПолучитьОбласть("ПодвалДата");
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрокаТаблицы);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		ОбщегоНазначенияБЗККлиентСервер.ОчиститьЗначенияСтруктуры(ДанныеПечати.ШапкаДокумента);
		ОбщегоНазначенияБЗККлиентСервер.ОчиститьЗначенияСтруктуры(ДанныеПечати.Подвал);
		
		// выводим данные о документе
		ЗаполнитьЗначенияСвойств(ДанныеПечати.ШапкаДокумента, ВыборкаШапок);
		ДанныеПечати.ШапкаДокумента.НазваниеОрганизации = СокрЛП(ВыборкаШапок.НазваниеОрганизации);
		ДанныеПечати.ШапкаДокумента.СпособВыплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаШапок.Ссылка, "СпособВыплаты");
		ДанныеПечати.ШапкаДокумента.ПериодВыплаты = Формат(ВыборкаШапок.ПериодРегистрации,"ДФ='ММММ ггг'");
		ДанныеПечати.ШапкаДокумента.КодВидаДохода = КодВидаДохода(ВыборкаШапок.Ссылка, "ВидДоходаИсполнительногоПроизводства");
		Если НастройкиПечатныхФорм.ВыводитьПолнуюИерархиюПодразделений И ЗначениеЗаполнено(ВыборкаШапок.Подразделение) Тогда
			ДанныеПечати.ШапкаДокумента.Подразделение = ВыборкаШапок.Подразделение.ПолноеНаименование();
		КонецЕсли;
		// Подвал документа.
		ЗаполнитьЗначенияСвойств(ДанныеПечати.Подвал, ВыборкаШапок);
		
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ДанныеПечати.ШапкаДокумента);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ВыведеноСтраниц = 1;
		ВыведеноСтрок = 0;
		СуммаНачисленийЛиста = 0;
		СуммаВыплатЛиста = 0;
		СуммаУдержанийЛиста = 0; 
		СуммаНачисленийИтого = 0;
		СуммаУдержанийИтого = 0;
		СуммаВыплатИтого = 0;
		
		// Выводим данные по строкам документа.
		НомерСтроки = 0;
		ВыборкаСтрок.Сбросить();
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Ссылка, "Ведомость") Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбщегоНазначенияБЗККлиентСервер.ОчиститьЗначенияСтруктуры(ДанныеПечати.Строка);
			
			ЗаполнитьЗначенияСвойств(ДанныеПечати.Строка, ВыборкаСтрок);
			ДанныеПечати.Строка.НомерСтроки = НомерСтроки;
			ДанныеПечати.Строка.ТабельныйНомер = 
				ЗарплатаКадрыОтчеты.ТабельныйНомерНаПечать(ВыборкаСтрок.ТабельныйНомер);
				
			Если НастройкиПечатныхФорм.ВыводитьПолныеФИОВСписочныхПечатныхФормах Тогда
				ДанныеПечати.Строка.ФИОПолные = ВыборкаСтрок.ФИОПолные;
			Иначе
				ДанныеПечати.Строка.ФИОПолные = ВыборкаСтрок.ФамилияИО;
			КонецЕсли;
			
			ОбластьМакетаСтрокаТаблицы.Параметры.Заполнить(ДанныеПечати.Строка);
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу.
			ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвалДокумента);
				ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаИтогПоСтранице.Параметры, "СуммаНачисленийЛиста", СуммаНачисленийЛиста); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаИтогПоСтранице.Параметры, "СуммаУдержанийЛиста", СуммаУдержанийЛиста); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаИтогПоСтранице.Параметры, "СуммаВыплатЛиста", СуммаВыплатЛиста); 
				
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
				
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				СуммаНачисленийЛиста = 0;
				СуммаУдержанийЛиста = 0;
				СуммаВыплатЛиста = 0;	
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрокаТаблицы);
			СуммаНачисленийЛиста = СуммаНачисленийЛиста + ВыборкаСтрок.СуммаНачислено;
			СуммаУдержанийЛиста = СуммаУдержанийЛиста + ВыборкаСтрок.СуммаУдержано;
			СуммаВыплатЛиста = СуммаВыплатЛиста + ВыборкаСтрок.СуммаВыплачено;
			
			СуммаНачисленийИтого = СуммаНачисленийИтого + ВыборкаСтрок.СуммаНачислено;
			СуммаУдержанийИтого = СуммаУдержанийИтого + ВыборкаСтрок.СуммаУдержано;
			СуммаВыплатИтого = СуммаВыплатИтого + ВыборкаСтрок.СуммаВыплачено;
			
		КонецЦикла; // по строкам документа
		
		Если ВыведеноСтрок > 0 Тогда 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаИтогПоСтранице.Параметры, "СуммаНачисленийЛиста", СуммаНачисленийЛиста); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаИтогПоСтранице.Параметры, "СуммаУдержанийЛиста", СуммаУдержанийЛиста); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаИтогПоСтранице.Параметры, "СуммаВыплатЛиста", СуммаВыплатЛиста); 
		КонецЕсли;
		
		ОбластьМакетаПодвалДокумента.Параметры.Заполнить(ДанныеПечати.Подвал); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаПодвалДокумента.Параметры, "СуммаНачисленийИтого", СуммаНачисленийИтого); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаПодвалДокумента.Параметры, "СуммаУдержанийИтого", СуммаУдержанийИтого); 
				ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(
					ОбластьМакетаПодвалДокумента.Параметры, "СуммаВыплатИтого", СуммаВыплатИтого); 
						
		// дополняем пустыми строками до конца страницы
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвалДокумента);
		РуководительДолжность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаШапок.Ссылка, "ДолжностьРуководителя");
		ГлавныйБухгалтерДолжность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаШапок.Ссылка, "ДолжностьГлавногоБухгалтера");
		БухгалтерДолжность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаШапок.Ссылка, "ДолжностьБухгалтера");
		НазаваниеПараметра = "ДолжностьОтветственного";
		Если ЗначениеЗаполнено(РуководительДолжность) Тогда 
			ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(ОбластьМакетаПодписиОтветственного.Параметры, 
				НазаваниеПараметра, ГлавныйБухгалтерДолжность);
			ТабличныйДокумент.Вывести(ОбластьМакетаПодписиОтветственного); 
		КонецЕсли;
		Если ЗначениеЗаполнено(ГлавныйБухгалтерДолжность) Тогда 
			ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(ОбластьМакетаПодписиОтветственного.Параметры, 
				НазаваниеПараметра, ГлавныйБухгалтерДолжность);
			ТабличныйДокумент.Вывести(ОбластьМакетаПодписиОтветственного); 
		КонецЕсли;
		Если ЗначениеЗаполнено(БухгалтерДолжность) Тогда 
			ОбщегоНазначенияБЗККлиентСервер.УстановитьЗначениеСвойства(ОбластьМакетаПодписиОтветственного.Параметры, 
				НазаваниеПараметра, БухгалтерДолжность);
			ТабличныйДокумент.Вывести(ОбластьМакетаПодписиОтветственного); 
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвалДата); 
					
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);
		
	КонецЦикла; // по документам
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПараметрыЗаполнения()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("Ссылка", Неопределено);
	Параметры.Вставить("ДатаАктуальности", '00010101');
	Параметры.Вставить("ОрганизацияНаименованиеПолное", "");
	Параметры.Вставить("ИНН", "");
	Параметры.Вставить("КПП", "");
	Параметры.Вставить("ОГРН", "");
	Параметры.Вставить("ОрганизацияТелефон", "");
	Параметры.Вставить("ОрганизацияАдресЮридический", "");
	Параметры.Вставить("ОрганизацияАдресФактический", "");
	Параметры.Вставить("ОрганизацияАдресПочтовый", "");
	Параметры.Вставить("ОрганизацияГородФактическогоАдреса", "");
	Параметры.Вставить("Сотрудник", Справочники.Сотрудники.ПустаяСсылка());
	Параметры.Вставить("Подразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	Параметры.Вставить("Должность", Справочники.Должности.ПустаяСсылка());
	Параметры.Вставить("ТрудовойДоговорНомер", "");
	Параметры.Вставить("ТрудовойДоговорДата", '00010101');
	Параметры.Вставить("РуководительФамилияИО", "");
	Параметры.Вставить("РуководительФИОПолные", "");
	Параметры.Вставить("РуководительПол");
	Параметры.Вставить("РуководительДолжность", Справочники.Должности.ПустаяСсылка());
	Параметры.Вставить("ОснованиеРуководителя", "");
	
	Параметры.Вставить("РуководительКадровойСлужбыФамилияИО", "");
	Параметры.Вставить("РуководительКадровойСлужбыФИОПолные", "");
	Параметры.Вставить("РуководительКадровойСлужбыФИОПолныеПадеж", "");
	Параметры.Вставить("РуководительКадровойСлужбыПол");
	Параметры.Вставить("РуководительКадровойСлужбыДолжность", Справочники.Должности.ПустаяСсылка());
	Параметры.Вставить("РуководительКадровойСлужбыДолжностьПадеж", "");
	Параметры.Вставить("ОснованиеРуководителяКадровойСлужбы", "");
	Параметры.Вставить("ФИОПолные", "");
	Параметры.Вставить("ФИОПолныеПадеж", "");
	Параметры.Вставить("ФамилияИО", "");
	Параметры.Вставить("Пол");
	Параметры.Вставить("АдресПоПропискеПредставление", "");
	Параметры.Вставить("АдресДляИнформированияПредставление", "");
	Параметры.Вставить("ДокументПредставление", "");
	Параметры.Вставить("Страна", Справочники.СтраныМира.Россия);
	Параметры.Вставить("РуководительДолжностьВПадеже", "");
	Параметры.Вставить("ФИОПолныеПредыдущий", "");

	Возврат Параметры;
	
КонецФункции

Функция КодВидаДохода(Ведомость, Название)
	Если не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Ведомость, Название) тогда 
		Возврат "1";
	КонецЕсли;	
	ЗначениеКода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ведомость, Название);
	Возврат ВидыДоходовИсполнительногоПроизводстваКлиентСервер.КодВидаДохода(ЗначениеКода);
КонецФункции

Функция ВыборкаДляПечатиТаблицы(Ведомости) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИмяТипа = Ведомости[0].Метаданные().ПолноеИмя();
	цт_СоздатьВТВыплатыВедомостей(Запрос.МенеджерВременныхТаблиц, Истина,  Ведомости, ИмяТипа);

	Запрос.УстановитьПараметр("Ведомости", Ведомости);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Выплаты.Сотрудник КАК Сотрудник,
	|	Выплаты.Сотрудник КАК Подразделение,
	|	Конецпериода(Выплаты.Период,Месяц) КАК Период
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ВТ_ВыплатыВедомостей КАК Выплаты";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = 
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
    		Запрос.МенеджерВременныхТаблиц,
    		"ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(
		ОписательВременныхТаблиц, Истина, 
		"ФИОПолные, Должность, Подразделение,ТабельныйНомер, НомерЛицевогоСчета");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Выплаты.Ведомость КАК Ведомость,
	|	КадровыеДанныеСотрудников.ТабельныйНомер КАК ТабельныйНомер,
	|	КадровыеДанныеСотрудников.ФИОПолные КАК ФИОПолные,
	|	КадровыеДанныеСотрудников.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	|	КадровыеДанныеСотрудников.Должность КАК Должность,
	|	Выплаты.Подразделение КАК Подразделение,
	|	Выплаты.СуммаНачислено КАК СуммаНачислено,
	|	Выплаты.СуммаУдержано КАК СуммаУдержано,
	|	Выплаты.СуммаВыплачено КАК СуммаВыплачено,
	|	Выплаты.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ_ВыплатыВедомостей КАК Выплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО Выплаты.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И (КОНЕЦПЕРИОДА(Выплаты.Период, МЕСЯЦ) = КадровыеДанныеСотрудников.Период)
	|ГДЕ
	|	Выплаты.СуммаВыплачено <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ведомость,
	|	ФИОПолные";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции  

Процедура цт_СоздатьВТВыплатыВедомостей(МенеджерВременныхТаблиц, ТолькоРазрешенные,  Ведомости, ИмяТипа)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.Текст =  ТектсЗапросаСокращенная();
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Ведомость", ИмяТипа);
	Если ИмяТипа <> "Документ.ВедомостьНаВыплатуЗарплатыВКассу" тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВзысканнаяСумма", "ВедомостьНаВыплатуЗарплатыВБанкСостав.ВзысканнаяСумма");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВзысканнаяСумма", "0");
	КонецЕсли;
	// Ничего тайного в дате ведомости и порядке строк нет.
	// RLS по работникам сработает при получении данных из регистра взаиморасчетов.
	УстановитьПривилегированныйРежим(Истина); 
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь); 
	МассивВТ = Новый Массив;
	МассивВТ.Добавить("ВТ_Зарплата");
	МассивВТ.Добавить("ВТ_НДФЛ");
	МассивВТ.Добавить("ВТ_Взысканя");
	МассивВТ.Добавить("ВТ_ОбщаяВыплата");
	МассивВТ.Добавить("ВТ_КоэфВзыскания");
	МассивВТ.Добавить("ВТ_КоэфНДФЛ");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, МассивВТ );
	
КонецПроцедуры

Функция ТектсЗапроса()
	Возврат "ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Подразделение КАК Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Сотрудник КАК Сотрудник,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	                |	NULL КАК ДокументОснование,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыВБанкЗарплата.КВыплате) КАК КВыплате,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка КАК Ведомость,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК ПериодВзаиморасчетов,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты КАК СпособВыплаты
	                |ПОМЕСТИТЬ ВТ_Зарплата
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыВБанк.Зарплата КАК ВедомостьНаВыплатуЗарплатыВБанкЗарплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	                |		ПО ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Сотрудник,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.НомерЛицевогоСчета,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Сотрудник,
	                |	NULL,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.ДокументОснование,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыВКассуЗарплата.КВыплате),
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.СпособВыплаты
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыВКассу.Зарплата КАК ВедомостьНаВыплатуЗарплатыВКассуЗарплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ВедомостьНаВыплатуЗарплатыВКассу
	                |		ПО ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка = ВедомостьНаВыплатуЗарплатыВКассу.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Сотрудник,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.ДокументОснование,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.ПериодРегистрации
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Сотрудник,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.БанковскийСчет,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.ДокументОснование,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.КВыплате),
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.СпособВыплаты
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыПеречислением КАК ВедомостьНаВыплатуЗарплатыПеречислением
	                |		ПО ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Ссылка = ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Сотрудник,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.ДокументОснование,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемЗарплата.БанковскийСчет
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка КАК Ведомость,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК ПериодВзаиморасчетов,
	                |	NULL КАК СпособВыплаты,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Сумма + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышения + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышенияПоСтавке18 + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышенияПоСтавке20 + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышенияПоСтавке22) КАК СуммаНДФЛ
	                |ПОМЕСТИТЬ ВТ_НДФЛ
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	                |		ПО ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.СпособВыплаты,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.СуммаСПревышенияПоСтавке22 + ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.Сумма + ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.СуммаСПревышения + ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.СуммаСПревышенияПоСтавке18 + ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.СуммаСПревышенияПоСтавке20)
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыВКассу.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВКассуНДФЛ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ВедомостьНаВыплатуЗарплатыВКассу
	                |		ПО ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.Ссылка = ВедомостьНаВыплатуЗарплатыВКассу.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВКассуНДФЛ.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВКассу.ПериодРегистрации
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.СпособВыплаты,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.СуммаСПревышенияПоСтавке22 + ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.Сумма + ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.СуммаСПревышения + ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.СуммаСПревышенияПоСтавке18 + ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.СуммаСПревышенияПоСтавке20)
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыПеречислением.НДФЛ КАК ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыПеречислением КАК ВедомостьНаВыплатуЗарплатыПеречислением
	                |		ПО ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.Ссылка = ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемНДФЛ.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.ПериодРегистрации
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка КАК Ведомость,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК ПериодВзаиморасчетов,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты КАК СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.ВзысканнаяСумма КАК ВзысканнаяСумма
	                |ПОМЕСТИТЬ ВТ_Взысканя
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыВБанк.Состав КАК ВедомостьНаВыплатуЗарплатыВБанкСостав
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	                |		ПО ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.НомерЛицевогоСчета,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.ВзысканнаяСумма
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.БанковскийСчет,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.ВзысканнаяСумма
	                |ИЗ
	                |	Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Состав КАК ВедомостьНаВыплатуЗарплатыПеречислениемСостав
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыПеречислением КАК ВедомостьНаВыплатуЗарплатыПеречислением
	                |		ПО ВедомостьНаВыплатуЗарплатыПеречислениемСостав.Ссылка = ВедомостьНаВыплатуЗарплатыПеречислением.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыПеречислением.ПериодРегистрации,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.БанковскийСчет,
	                |	ВедомостьНаВыплатуЗарплатыПеречислениемСостав.ВзысканнаяСумма
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Зарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	СУММА(ВТ_Зарплата.КВыплате) КАК КВыплате,
	                |	ВТ_Зарплата.Ведомость КАК Ведомость
	                |ПОМЕСТИТЬ ВТ_ОбщаяВыплата
	                |ИЗ
	                |	ВТ_Зарплата КАК ВТ_Зарплата
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ_Зарплата.Ведомость,
	                |	ВТ_Зарплата.ФизическоеЛицо
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВТ_ОбщаяВыплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВТ_ОбщаяВыплата.Ведомость КАК Ведомость,
	                |	ВТ_ОбщаяВыплата.КВыплате КАК КВыплате,
	                |	ВТ_Взысканя.ВзысканнаяСумма КАК ВзысканнаяСумма,
	                |	ВЫБОР
	                |		КОГДА ВТ_Взысканя.ВзысканнаяСумма > 0
	                |			ТОГДА ВТ_ОбщаяВыплата.КВыплате / ВТ_Взысканя.ВзысканнаяСумма
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК Коэффициент
	                |ПОМЕСТИТЬ ВТ_КоэфВзыскания
	                |ИЗ
	                |	ВТ_ОбщаяВыплата КАК ВТ_ОбщаяВыплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Взысканя КАК ВТ_Взысканя
	                |		ПО ВТ_ОбщаяВыплата.Ведомость = ВТ_Взысканя.Ведомость
	                |			И ВТ_ОбщаяВыплата.ФизическоеЛицо = ВТ_Взысканя.ФизическоеЛицо
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВТ_ОбщаяВыплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВТ_ОбщаяВыплата.Ведомость КАК Ведомость,
	                |	ВЫБОР
	                |		КОГДА ВТ_НДФЛ.СуммаНДФЛ > 0
	                |			ТОГДА ВТ_ОбщаяВыплата.КВыплате / ВТ_НДФЛ.СуммаНДФЛ
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК КоэфНДФЛ
	                |ПОМЕСТИТЬ ВТ_КоэфНДФЛ
	                |ИЗ
	                |	ВТ_ОбщаяВыплата КАК ВТ_ОбщаяВыплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НДФЛ КАК ВТ_НДФЛ
	                |		ПО ВТ_ОбщаяВыплата.Ведомость = ВТ_НДФЛ.Ведомость
	                |			И ВТ_ОбщаяВыплата.ФизическоеЛицо = ВТ_НДФЛ.ФизическоеЛицо
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВТ_Зарплата.Подразделение КАК Подразделение,
	                |	ВТ_Зарплата.Сотрудник КАК Сотрудник,
	                |	ВТ_Зарплата.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	                |	ВТ_Зарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВТ_Зарплата.Ведомость КАК Ведомость,
	                |	ВТ_Зарплата.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	                |	СУММА(ВТ_Зарплата.КВыплате) КАК СуммаВыплачено,
	                |	СУММА(ОКР(ВТ_Зарплата.КВыплате / ВТ_КоэфВзыскания.Коэффициент + ВТ_Зарплата.КВыплате / ВТ_КоэфНДФЛ.КоэфНДФЛ, 2)) КАК СуммаУдержано,
	                |	СУММА(ОКР(ВТ_Зарплата.КВыплате / ВТ_КоэфВзыскания.Коэффициент + ВТ_Зарплата.КВыплате / ВТ_КоэфНДФЛ.КоэфНДФЛ, 2) + ВТ_Зарплата.КВыплате) КАК СуммаНачислено
	                |ПОМЕСТИТЬ ВТ_ВыплатыВедомостей
	                |ИЗ
	                |	ВТ_Зарплата КАК ВТ_Зарплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэфНДФЛ КАК ВТ_КоэфНДФЛ
	                |		ПО ВТ_Зарплата.ФизическоеЛицо = ВТ_КоэфНДФЛ.ФизическоеЛицо
	                |			И ВТ_Зарплата.Ведомость = ВТ_КоэфНДФЛ.Ведомость
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэфВзыскания КАК ВТ_КоэфВзыскания
	                |		ПО ВТ_Зарплата.ФизическоеЛицо = ВТ_КоэфВзыскания.ФизическоеЛицо
	                |			И ВТ_Зарплата.Ведомость = ВТ_КоэфВзыскания.Ведомость
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ_Зарплата.Подразделение,
	                |	ВТ_Зарплата.Сотрудник,
	                |	ВТ_Зарплата.НомерЛицевогоСчета,
	                |	ВТ_Зарплата.ФизическоеЛицо,
	                |	ВТ_Зарплата.Ведомость,
	                |	ВТ_Зарплата.ПериодВзаиморасчетов";
КонецФункции

Функция ТектсЗапросаСокращенная()
	Возврат "ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Подразделение КАК Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Сотрудник КАК Сотрудник,
	                |	NULL КАК ДокументОснование,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыВБанкЗарплата.КВыплате) КАК КВыплате,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка КАК Ведомость,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК ПериодВзаиморасчетов,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты КАК СпособВыплаты
	                |ПОМЕСТИТЬ ВТ_Зарплата
	                |ИЗ
	                |	#Ведомость.Зарплата КАК ВедомостьНаВыплатуЗарплатыВБанкЗарплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ #Ведомость КАК ВедомостьНаВыплатуЗарплатыВБанк
	                |		ПО ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Сотрудник,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Подразделение,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка КАК Ведомость,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК ПериодВзаиморасчетов,
	                |	NULL КАК СпособВыплаты,
	                |	СУММА(ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Сумма + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышения + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышенияПоСтавке18 + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышенияПоСтавке20 + ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.СуммаСПревышенияПоСтавке22) КАК СуммаНДФЛ
	                |ПОМЕСТИТЬ ВТ_НДФЛ
	                |ИЗ
	                |	#Ведомость.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ #Ведомость КАК ВедомостьНаВыплатуЗарплатыВБанк
	                |		ПО ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка КАК Ведомость,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации КАК ПериодВзаиморасчетов,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты КАК СпособВыплаты,
	                |	#ВзысканнаяСумма КАК ВзысканнаяСумма
	                |ПОМЕСТИТЬ ВТ_Взысканя
	                |ИЗ
	                |	#Ведомость.Состав КАК ВедомостьНаВыплатуЗарплатыВБанкСостав
	                |		ЛЕВОЕ СОЕДИНЕНИЕ #Ведомость КАК ВедомостьНаВыплатуЗарплатыВБанк
	                |		ПО ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка = ВедомостьНаВыплатуЗарплатыВБанк.Ссылка
	                |ГДЕ
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка В(&Ведомости)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.ФизическоеЛицо,
	                |	ВедомостьНаВыплатуЗарплатыВБанкСостав.Ссылка,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты,
	                |	ВедомостьНаВыплатуЗарплатыВБанк.ПериодРегистрации,
	                |	#ВзысканнаяСумма
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Зарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	СУММА(ВТ_Зарплата.КВыплате) КАК КВыплате,
	                |	ВТ_Зарплата.Ведомость КАК Ведомость
	                |ПОМЕСТИТЬ ВТ_ОбщаяВыплата
	                |ИЗ
	                |	ВТ_Зарплата КАК ВТ_Зарплата
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ_Зарплата.Ведомость,
	                |	ВТ_Зарплата.ФизическоеЛицо
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВТ_ОбщаяВыплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВТ_ОбщаяВыплата.Ведомость КАК Ведомость,
	                |	ВТ_ОбщаяВыплата.КВыплате КАК КВыплате,
	                |	ВТ_Взысканя.ВзысканнаяСумма КАК ВзысканнаяСумма,
	                |	ВЫБОР
	                |		КОГДА ВТ_Взысканя.ВзысканнаяСумма > 0
	                |			ТОГДА ВТ_ОбщаяВыплата.КВыплате / ВТ_Взысканя.ВзысканнаяСумма
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК Коэффициент
	                |ПОМЕСТИТЬ ВТ_КоэфВзыскания
	                |ИЗ
	                |	ВТ_ОбщаяВыплата КАК ВТ_ОбщаяВыплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Взысканя КАК ВТ_Взысканя
	                |		ПО ВТ_ОбщаяВыплата.Ведомость = ВТ_Взысканя.Ведомость
	                |			И ВТ_ОбщаяВыплата.ФизическоеЛицо = ВТ_Взысканя.ФизическоеЛицо
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВТ_ОбщаяВыплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВТ_ОбщаяВыплата.Ведомость КАК Ведомость,
	                |	ВЫБОР
	                |		КОГДА ВТ_НДФЛ.СуммаНДФЛ > 0
	                |			ТОГДА ВТ_ОбщаяВыплата.КВыплате / ВТ_НДФЛ.СуммаНДФЛ
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК КоэфНДФЛ
	                |ПОМЕСТИТЬ ВТ_КоэфНДФЛ
	                |ИЗ
	                |	ВТ_ОбщаяВыплата КАК ВТ_ОбщаяВыплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НДФЛ КАК ВТ_НДФЛ
	                |		ПО ВТ_ОбщаяВыплата.Ведомость = ВТ_НДФЛ.Ведомость
	                |			И ВТ_ОбщаяВыплата.ФизическоеЛицо = ВТ_НДФЛ.ФизическоеЛицо
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВТ_Зарплата.Подразделение КАК Подразделение,
	                |	ВТ_Зарплата.Сотрудник КАК Сотрудник,
	                |	ВТ_Зарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	                |	ВТ_Зарплата.Ведомость КАК Ведомость,
	                |	ВТ_Зарплата.ПериодВзаиморасчетов КАК Период,
	                |	СУММА(ВТ_Зарплата.КВыплате) КАК СуммаВыплачено,
	                |	СУММА(ОКР(ВТ_Зарплата.КВыплате / ВТ_КоэфВзыскания.Коэффициент + ВТ_Зарплата.КВыплате / ВТ_КоэфНДФЛ.КоэфНДФЛ, 2)) КАК СуммаУдержано,
	                |	СУММА(ОКР(ВТ_Зарплата.КВыплате / ВТ_КоэфВзыскания.Коэффициент + ВТ_Зарплата.КВыплате / ВТ_КоэфНДФЛ.КоэфНДФЛ, 2) + ВТ_Зарплата.КВыплате) КАК СуммаНачислено
	                |ПОМЕСТИТЬ ВТ_ВыплатыВедомостей
	                |ИЗ
	                |	ВТ_Зарплата КАК ВТ_Зарплата
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэфНДФЛ КАК ВТ_КоэфНДФЛ
	                |		ПО ВТ_Зарплата.ФизическоеЛицо = ВТ_КоэфНДФЛ.ФизическоеЛицо
	                |			И ВТ_Зарплата.Ведомость = ВТ_КоэфНДФЛ.Ведомость
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэфВзыскания КАК ВТ_КоэфВзыскания
	                |		ПО ВТ_Зарплата.ФизическоеЛицо = ВТ_КоэфВзыскания.ФизическоеЛицо
	                |			И ВТ_Зарплата.Ведомость = ВТ_КоэфВзыскания.Ведомость
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ_Зарплата.Подразделение,
	                |	ВТ_Зарплата.Сотрудник,
	                |	ВТ_Зарплата.ФизическоеЛицо,
	                |	ВТ_Зарплата.Ведомость,
	                |	ВТ_Зарплата.ПериодВзаиморасчетов";
КонецФункции

Процедура СоздатьВТВыплатыВедомостей(МенеджерВременныхТаблиц, ТолькоРазрешенные, ИмяТипа, Ведомости)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.УстановитьПараметр("Выплаты",   Перечисления.ВидыВзаиморасчетовССотрудниками.Выплаты());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВедомостьСостав.Ссылка КАК Ссылка,
	|	ВедомостьСостав.Ссылка.Дата КАК Дата,
	|	ВедомостьСостав.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьСостав.ВзысканнаяСумма КАК ВзысканнаяСумма,
	|	МИНИМУМ(ВедомостьСостав.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТВедомости
	|ИЗ
	|	#ВедомостьСостав КАК ВедомостьСостав
	|ГДЕ
	|	ВедомостьСостав.Ссылка В(&Ведомости)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВедомостьСостав.Ссылка,
	|	ВедомостьСостав.Ссылка.Дата,
	|	ВедомостьСостав.ФизическоеЛицо";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВедомостьСостав", ИмяТипа + ".Состав");

	// Ничего тайного в дате ведомости и порядке строк нет.
	// RLS по работникам сработает при получении данных из регистра взаиморасчетов.
	УстановитьПривилегированныйРежим(Истина); 
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь); 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Ведомость.Ссылка КАК Ведомость,
	|	Ведомость.Дата КАК ВедомостьДата,
	|	Ведомость.НомерСтроки КАК НомерСтроки,
	|	Взаиморасчеты.Сотрудник КАК Сотрудник,
	|	СУММА(Взаиморасчеты.СуммаВзаиморасчетов) КАК Сумма,
	|	Ведомость.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТВыплатыВедомостей
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК Взаиморасчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВедомости КАК Ведомость
	|		ПО Взаиморасчеты.Регистратор = Ведомость.Ссылка
	|			И Взаиморасчеты.ФизическоеЛицо = Ведомость.ФизическоеЛицо
	|ГДЕ
	|	Взаиморасчеты.Регистратор В(&Ведомости)
	|	И Взаиморасчеты.ВидВзаиморасчетов В(&Выплаты)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ведомость.Ссылка,
	|	Ведомость.Дата,
	|	Ведомость.НомерСтроки,
	|	Взаиморасчеты.Сотрудник,
	|	Ведомость.ФизическоеЛицо";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТВедомости");
	
КонецПроцедуры

Функция ПараметрыОбластейСтандартногоМакета(Макет)
	ИменаОбластей = Новый Массив;
	Для Каждого Область Из Макет.Области Цикл
		ИменаОбластей.Добавить(Область.Имя)
	КонецЦикла;	
	
	Параметры = Новый Структура;
	Для Каждого ИмяОбласти Из ИменаОбластей Цикл
		Область = Макет.ПолучитьОбласть(ИмяОбласти);
		Параметры.Вставить(
		ИмяОбласти,
		ОбщегоНазначенияБЗК.ПараметрыТабличногоДокумента(Область));
	КонецЦикла;		
	
	Возврат Параметры;

КонецФункции
